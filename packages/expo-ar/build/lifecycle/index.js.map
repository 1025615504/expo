{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/lifecycle/index.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,cAAc,EAAE,MAAM,cAAc,CAAC;AAE9C,OAAO,EAAE,QAAQ,EAAE,MAAM,aAAa,CAAC;AAGvC;;;;;GAKG;AACH,MAAM,CAAC,KAAK,UAAU,UAAU,CAC9B,IAA8B,EAC9B,aAAoC;IAEpC,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;QAC5B,OAAO,QAAQ,CAAC,UAAU,CAAC,IAAI,EAAE,aAAa,CAAC,CAAC;KACjD;SAAM;QACL,MAAM,MAAM,GAAG,cAAc,CAAC,IAAI,CAAC,CAAC;QACpC,IAAI,MAAM,KAAK,IAAI,EAAE;YACnB,MAAM,IAAI,KAAK,CAAC,8DAA8D,IAAI,EAAE,CAAC,CAAC;SACvF;QACD,OAAO,QAAQ,CAAC,UAAU,CAAC,MAAM,EAAE,aAAa,CAAC,CAAC;KACnD;AACH,CAAC;AAED;;GAEG;AACH,MAAM,CAAC,KAAK,UAAU,UAAU;IAC9B,OAAO,QAAQ,CAAC,KAAK,EAAE,CAAC;AAC1B,CAAC;AAED;;GAEG;AACH,MAAM,CAAC,KAAK,UAAU,WAAW;IAC/B,OAAO,QAAQ,CAAC,MAAM,EAAE,CAAC;AAC3B,CAAC;AAED;;GAEG;AACH,MAAM,CAAC,KAAK,UAAU,UAAU;IAC9B,OAAO,QAAQ,CAAC,KAAK,EAAE,CAAC;AAC1B,CAAC;AAED;;GAEG;AACH,MAAM,CAAC,KAAK,UAAU,SAAS;IAC7B,OAAO,QAAQ,CAAC,SAAS,EAAE,CAAC;AAC9B,CAAC","sourcesContent":["import { findNodeHandle } from 'react-native';\n\nimport { NativeAR } from '../NativeAR';\nimport { TrackingConfiguration } from '../commons';\n\n/**\n * Starts AR session\n * \n * @param node Handler for GLView component\n * @param configuration {@only iOS}. Defines motion and scene tracking behaviors for the session. {@link https://developer.apple.com/documentation/arkit/arsession/2865608-runwithconfiguration}\n */\nexport async function startAsync(\n  node: number | React.Component,\n  configuration: TrackingConfiguration\n): Promise<{ capturedImageTexture: number }> {\n  if (typeof node === 'number') {\n    return NativeAR.startAsync(node, configuration);\n  } else {\n    const handle = findNodeHandle(node);\n    if (handle === null) {\n      throw new Error(`Could not find the React node handle for the AR component: ${node}`);\n    }\n    return NativeAR.startAsync(handle, configuration);\n  }\n}\n\n/**\n * Pauses native session. No new AR data would be provided. Preview would be stopped as well.\n */\nexport async function pauseAsync(): Promise<void> {\n  return NativeAR.pause();\n}\n\n/**\n * Resumes previously paused session. That would restore any AR data provision. Preview would be restored as well.\n */\nexport async function resumeAsync(): Promise<void> {\n  return NativeAR.resume();\n}\n\n/**\n * Tears down current session and starts it up again with previous configuration.\n */\nexport async function resetAsync(): Promise<void> {\n  return NativeAR.reset();\n}\n\n/**\n * Stops current session. That would clean up native side. You can start another session after calling this.\n */\nexport async function stopAsync(): Promise<void> {\n  return NativeAR.stopAsync();\n}"]}
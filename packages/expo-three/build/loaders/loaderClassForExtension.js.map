{"version":3,"file":"loaderClassForExtension.js","sourceRoot":"","sources":["../../src/loaders/loaderClassForExtension.ts"],"names":[],"mappings":"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","sourcesContent":["import * as THREE from 'three';\n\nfunction getExtension(uri: string): string {\n  return uri\n    .split('.')\n    .pop()!\n    .split('?')[0]\n    .split('#')[0];\n}\n\nexport function loaderClassForUri(uri: string): string | null {\n  const extension = getExtension(uri);\n  console.log('ExpoTHREE.loaderClassForUri', { extension, uri });\n\n  return loaderClassForExtension(extension);\n}\n\nexport function loaderClassForExtension(extension: string): any | string | undefined | null {\n  if (typeof extension !== 'string') {\n    console.error('Supplied extension is not a valid string');\n    return null;\n  }\n  switch (extension.toLowerCase()) {\n    case '3mf':\n      // @ts-ignore\n      if (!THREE.ThreeMFLoader) require('three/examples/js/loaders/3MFLoader');\n      // @ts-ignore\n      return THREE.ThreeMFLoader;\n    case 'amf':\n      // @ts-ignore\n      if (!THREE.AMFLoader) require('./AMFLoader');\n      // @ts-ignore\n      return THREE.AMFLoader;\n    case 'assimp':\n      // @ts-ignore\n      if (!THREE.AssimpLoader)\n        require('three/examples/js/loaders/AssimpLoader');\n      // @ts-ignore\n      return THREE.AssimpLoader;\n    case 'awd':\n      if (!THREE.AWDLoader) require('three/examples/js/loaders/AWDLoader');\n      return THREE.AWDLoader;\n    case 'babylon':\n      // @ts-ignore\n      if (!THREE.BabylonLoader)\n        require('three/examples/js/loaders/BabylonLoader');\n      // @ts-ignore\n      return THREE.BabylonLoader;\n    case 'bvh':\n      // @ts-ignore   \n      if (!THREE.BVHLoader) require('three/examples/js/loaders/BVHLoader');\n      // @ts-ignore\n      return THREE.BVHLoader;\n    case 'ctm':\n      if (!THREE.CTMLoader) {\n        require('three/examples/js/loaders/ctm/lzma');\n        require('three/examples/js/loaders/ctm/ctm');\n        require('three/examples/js/loaders/ctm/CTMLoader');\n      }\n      return THREE.CTMLoader;\n    case 'max':\n    case '3ds':\n      // @ts-ignore \n      if (!THREE.TDSLoader) require('three/examples/js/loaders/TDSLoader');\n      // @ts-ignore\n      return THREE.TDSLoader;\n    case 'pcd':\n      // @ts-ignore\n      if (!THREE.PCDLoader) require('three/examples/js/loaders/PCDLoader');\n      // @ts-ignore\n      return THREE.PCDLoader;\n    case 'ply':\n      // @ts-ignore\n      if (!THREE.PLYLoader) require('three/examples/js/loaders/PLYLoader');\n      // @ts-ignore\n      return THREE.PLYLoader;\n    case 'obj':\n      if (!THREE.OBJLoader) require('three/examples/js/loaders/OBJLoader');\n      return THREE.OBJLoader;\n    case 'mtl':\n      if (!THREE.MTLLoader) require('three/examples/js/loaders/MTLLoader');\n      return THREE.MTLLoader;\n    case 'dae':\n      if (!THREE.ColladaLoader)\n        require('three/examples/js/loaders/ColladaLoader');\n      return THREE.ColladaLoader;\n    case 'stl':\n      if (!THREE.STLLoader) require('three/examples/js/loaders/STLLoader');\n      return THREE.STLLoader;\n    case 'vtk':\n    case 'vtp':\n      // @ts-ignore\n      if (!THREE.VTKLoader) require('three/examples/js/loaders/VTKLoader');\n      // @ts-ignore\n      return THREE.VTKLoader;\n    case 'x':\n      // @ts-ignore\n      if (!THREE.XLoader) require('three/examples/js/loaders/XLoader');\n      // @ts-ignore\n      return THREE.XLoader;\n    // case 'drc':\n    //   if (!THREE.DRACOLoader) require('three/examples/js/loaders/draco/DRACOLoader');\n    //   return THREE.DRACOLoader;\n    default:\n      console.error(\n        'ExpoTHREE.loaderClassForExtension(): Unrecognized file type',\n        extension\n      );\n      break;\n  }\n}\n"]}
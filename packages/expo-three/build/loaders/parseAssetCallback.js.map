{"version":3,"file":"parseAssetCallback.js","sourceRoot":"","sources":["../../src/loaders/parseAssetCallback.ts"],"names":[],"mappings":"AAAA,SAAS,UAAU,CAAC,eAAe;IACjC,OAAO,CACL,eAAe,IAAI,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,mBAAmB,CAC7E,CAAC;AACJ,CAAC;AAED,SAAS,QAAQ,CAAC,GAAG;IACnB,OAAO,GAAG,KAAK,IAAI,IAAI,OAAO,GAAG,KAAK,QAAQ,CAAC;AACjD,CAAC;AAED,MAAM,kBAAkB,GAAG,CAAC,IAAI,EAAE,oBAAoB,EAAE,EAAE;IACxD,IAAI,UAAU,CAAC,oBAAoB,CAAC,EAAE;QACpC,OAAO,oBAAoB,CAAC,IAAI,CAAC,CAAC;KACnC;SAAM,IAAI,QAAQ,CAAC,oBAAoB,CAAC,EAAE;QACzC,IAAI,IAAI,IAAI,oBAAoB,EAAE;YAChC,OAAO,oBAAoB,CAAC,IAAI,CAAC,CAAC;SACnC;aAAM;YACL,OAAO,CAAC,KAAK,CACX,kEAAkE,EAClE,IAAI,CACL,CAAC;SACH;KACF;SAAM;QACL,OAAO,CAAC,KAAK,CACX,yEAAyE,CAC1E,CAAC;KACH;AACH,CAAC,CAAC;AAEF,eAAe,kBAAkB,CAAC","sourcesContent":["function isFunction(functionToCheck) {\n  return (\n    functionToCheck && {}.toString.call(functionToCheck) === '[object Function]'\n  );\n}\n\nfunction isObject(obj) {\n  return obj !== null && typeof obj === 'object';\n}\n\nconst parseAssetCallback = (name, callbackOrDictionary) => {\n  if (isFunction(callbackOrDictionary)) {\n    return callbackOrDictionary(name);\n  } else if (isObject(callbackOrDictionary)) {\n    if (name in callbackOrDictionary) {\n      return callbackOrDictionary[name];\n    } else {\n      console.error(\n        \"getAssetAsync: object `callbackOrDictionary` doesn't contain key\",\n        name\n      );\n    }\n  } else {\n    console.error(\n      'getAssetAsync: prop `callbackOrDictionary` must be a function or object'\n    );\n  }\n};\n\nexport default parseAssetCallback;\n"]}
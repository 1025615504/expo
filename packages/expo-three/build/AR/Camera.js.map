{"version":3,"file":"Camera.js","sourceRoot":"","sources":["../../src/AR/Camera.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,KAAK,EAAE,MAAM,SAAS,CAAC;AAE9B,MAAM,CAAC,OAAO,OAAO,MAAO,SAAQ,KAAK,CAAC,iBAAiB;IAA3D;;QACE,sBAAiB,GAAG,KAAK,IAAI,EAAE;YAC7B,MAAM,QAAQ,GAAG,MAAM,EAAE,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;YAChE,IAAI,QAAQ,IAAI,QAAQ,CAAC,UAAU,EAAE;gBACnC,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;gBACvD,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;gBACrD,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,QAAQ,CAAC,gBAAgB,CAAC,CAAC;aAC5D;QACH,CAAC,CAAC;QAEF,2BAAsB,GAAG,IAAI,CAAC,iBAAiB,CAAC;IAClD,CAAC;CAAA","sourcesContent":["import * as THREE from 'three';\nimport * as AR from 'expo-ar';\n\nexport default class Camera extends THREE.PerspectiveCamera {\n  updateMatrixWorld = async () => {\n    const matrices = await AR.getMatricesAsync(this.near, this.far);\n    if (matrices && matrices.viewMatrix) {\n      this.matrixWorldInverse.fromArray(matrices.viewMatrix);\n      this.matrixWorld.getInverse(this.matrixWorldInverse);\n      this.projectionMatrix.fromArray(matrices.projectionMatrix);\n    }\n  };\n\n  updateProjectionMatrix = this.updateMatrixWorld;\n}\n"]}
{"version":3,"file":"Bluetooth.js","sourceRoot":"","sources":["../src/Bluetooth.ts"],"names":[],"mappings":"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","sourcesContent":["import { Platform, Subscription } from 'expo-core';\n\nimport {\n  Base64,\n  Central,\n  CentralState,\n  CharacteristicProperty,\n  Identifier,\n  NativeAdvertismentData,\n  NativeBluetoothElement,\n  NativeCharacteristic,\n  NativeDescriptor,\n  NativeError,\n  NativeEventData,\n  NativePeripheral,\n  NativeService,\n  PeripheralFoundCallback,\n  PeripheralState,\n  ScanSettings,\n  StateUpdatedCallback,\n  TransactionId,\n  TransactionType,\n  UUID,\n  WriteCharacteristicOptions,\n} from './Bluetooth.types';\nimport { BLUETOOTH_EVENT, DELIMINATOR, EVENTS, TYPES } from './BluetoothConstants';\nimport {\n  addHandlerForKey,\n  addListener,\n  fireMultiEventHandlers,\n  firePeripheralObservers,\n  getHandlersForKey,\n  resetHandlersForKey,\n  _resetAllHandlers,\n} from './BluetoothEventHandler';\nimport { invariantAvailability, invariantUUID } from './BluetoothInvariant';\nimport { clearPeripherals, getPeripherals, updateStateWithPeripheral } from './BluetoothLocalState';\nimport { peripheralIdFromId } from './BluetoothTransactions';\nimport ExpoBluetooth from './ExpoBluetooth';\nimport Transaction from './Transaction';\n\nimport BluetoothError from './BluetoothError';\n\nexport * from './Bluetooth.types';\n\n/*\ninitializeManagerAsync\ndeallocateManagerAsync\n\ngetPeripheralsAsync\ngetCentralAsync\nstartScanningAsync\nstopScanningAsync\nconnectPeripheralAsync\nreadRSSIAsync\nreadDescriptorAsync\nwriteDescriptorAsync\nwriteCharacteristicAsync\nreadCharacteristicAsync\nsetNotifyCharacteristicAsync\n\ndiscoverDescriptorsForCharacteristicAsync\ndiscoverCharacteristicsForServiceAsync\ndiscoverIncludedServicesForServiceAsync\ndisconnectPeripheralAsync\n*/\nexport { BLUETOOTH_EVENT, TYPES, EVENTS };\n\ntype ScanOptions = {\n  serviceUUIDsToQuery?: string[];\n  androidScanMode?: any;\n  androidMatchMode?: any;\n  /**\n   * Match as many advertisement per filter as hw could allow\n   * dependes on current capability and availability of the resources in hw.\n   */\n  androidNumberOfMatches?: any;\n};\n\ntype CancelScanningCallback = () => void;\n/**\n * **iOS:**\n *\n * Although strongly discouraged,\n * if `serviceUUIDsToQuery` is `null | undefined` all discovered peripherals will be returned.\n * If the central is already scanning with different\n * `serviceUUIDsToQuery` or `scanSettings`, the provided parameters will replace them.\n */\nexport function startScan(\n  scanSettings: ScanOptions = {},\n  callback: (peripheral: NativePeripheral) => void\n): CancelScanningCallback {\n  invariantAvailability('startScanningAsync');\n  const { serviceUUIDsToQuery = [], ...scanningOptions } = scanSettings;\n\n  ExpoBluetooth.startScanningAsync([...new Set(serviceUUIDsToQuery)], scanningOptions);\n\n  const subscription = addHandlerForKey(\n    EVENTS.CENTRAL_DID_DISCOVER_PERIPHERAL,\n    (event) => {\n      if (!event) {\n        throw new Error(\"UNEXPECTED \" + EVENTS.CENTRAL_DID_DISCOVER_PERIPHERAL);\n      }\n      callback(event.peripheral);\n    }\n  );\n\n  return async () => {\n    subscription.remove();\n    await stopScanAsync();\n  };\n}\n\nexport async function stopScanAsync(): Promise<void> {\n  invariantAvailability('stopScanningAsync');\n  // Remove all callbacks\n  await resetHandlersForKey(EVENTS.CENTRAL_DID_DISCOVER_PERIPHERAL);\n  await ExpoBluetooth.stopScanningAsync();\n}\n\n// Avoiding using \"start\" in passive method names\nexport function observeUpdates(callback: (updates: any) => void): Subscription {\n  return addHandlerForKey('everything', callback);\n}\n\nexport async function observeStateAsync(callback: StateUpdatedCallback): Promise<Subscription> {\n  const central = await getCentralAsync();\n  // Make the callback async so the subscription returns first.\n  setTimeout(() => callback(central.state));\n  return addHandlerForKey(EVENTS.CENTRAL_DID_UPDATE_STATE, callback);\n}\n\nexport async function connectAsync(\n  peripheralUUID: UUID,\n  options: {\n    timeout?: number;\n    options?: any;\n    onDisconnect?: any;\n  } = {}\n): Promise<NativePeripheral> {\n  invariantAvailability('connectPeripheralAsync');\n  invariantUUID(peripheralUUID);\n\n  const { onDisconnect } = options;\n  if (onDisconnect) {\n    addHandlerForKey(EVENTS.CENTRAL_DID_DISCONNECT_PERIPHERAL, onDisconnect);\n  }\n\n  let timeoutTag: number | undefined;\n\n  return new Promise(async (resolve, reject) => {\n    if (options.timeout) {\n      timeoutTag = setTimeout(() => {\n        disconnectAsync(peripheralUUID);\n        reject(\n          new BluetoothError({\n            message: `Failed to connect to peripheral: ${peripheralUUID} in under: ${\n              options.timeout\n            }ms`,\n            code: 'timeout',\n          })\n        );\n      }, options.timeout);\n    }\n\n    let result;\n    try {\n      result = await ExpoBluetooth.connectPeripheralAsync(peripheralUUID, options.options);\n    } catch (error) {\n      reject(error);\n    } finally {\n      clearTimeout(timeoutTag);\n    }\n    resolve(result);\n  });\n}\n\nexport async function disconnectAsync(peripheralUUID: UUID): Promise<any> {\n  invariantAvailability('disconnectPeripheralAsync');\n  invariantUUID(peripheralUUID);\n  return await ExpoBluetooth.disconnectPeripheralAsync(peripheralUUID);\n}\n\n/* TODO: Bacon: Add a return type */\nexport async function readDescriptorAsync({\n  peripheralUUID,\n  serviceUUID,\n  characteristicUUID,\n  descriptorUUID,\n}: any): Promise<Base64 | undefined> {\n  const { descriptor } = await ExpoBluetooth.readDescriptorAsync({\n    peripheralUUID,\n    serviceUUID,\n    characteristicUUID,\n    descriptorUUID,\n    characteristicProperties: CharacteristicProperty.Read,\n  });\n\n  return descriptor.value;\n}\n\n/* TODO: Bacon: Add a return type */\nexport async function writeDescriptorAsync({\n  peripheralUUID,\n  serviceUUID,\n  characteristicUUID,\n  descriptorUUID,\n  data,\n}: any): Promise<any> {\n  invariantAvailability('writeDescriptorAsync');\n  const { descriptor } = await ExpoBluetooth.writeDescriptorAsync({\n    peripheralUUID,\n    serviceUUID,\n    characteristicUUID,\n    descriptorUUID,\n    data,\n    characteristicProperties: CharacteristicProperty.Write,\n  });\n  return descriptor;\n}\nexport async function shouldNotifyDescriptorAsync({\n  peripheralUUID,\n  serviceUUID,\n  characteristicUUID,\n  descriptorUUID,\n  shouldNotify,\n}: any): Promise<any> {\n  invariantAvailability('setNotifyCharacteristicAsync');\n\n  const { descriptor } = await ExpoBluetooth.setNotifyCharacteristicAsync({\n    peripheralUUID,\n    serviceUUID,\n    characteristicUUID,\n    descriptorUUID,\n    shouldNotify,\n  });\n  return descriptor;\n}\n\n/* TODO: Bacon: Add a return type */\nexport async function readCharacteristicAsync({\n  peripheralUUID,\n  serviceUUID,\n  characteristicUUID,\n}: any): Promise<Base64 | null> {\n  const { characteristic } = await ExpoBluetooth.readCharacteristicAsync({\n    peripheralUUID,\n    serviceUUID,\n    characteristicUUID,\n    characteristicProperties: CharacteristicProperty.Read,\n  });\n\n  return characteristic.value;\n}\n\n/* TODO: Bacon: Add a return type */\nexport async function writeCharacteristicAsync({\n  peripheralUUID,\n  serviceUUID,\n  characteristicUUID,\n  data,\n}: any): Promise<NativeCharacteristic> {\n  const { characteristic } = await ExpoBluetooth.writeCharacteristicAsync({\n    peripheralUUID,\n    serviceUUID,\n    characteristicUUID,\n    data,\n    characteristicProperties: CharacteristicProperty.Write,\n  });\n  return characteristic;\n}\n\n/* TODO: Bacon: Why would anyone use this? */\n/* TODO: Bacon: Test if this works */\n/* TODO: Bacon: Add a return type */\nexport async function writeCharacteristicWithoutResponseAsync({\n  peripheralUUID,\n  serviceUUID,\n  characteristicUUID,\n  data,\n}: WriteCharacteristicOptions): Promise<NativeCharacteristic> {\n  const { characteristic } = await ExpoBluetooth.writeCharacteristicAsync({\n    peripheralUUID,\n    serviceUUID,\n    characteristicUUID,\n    data,\n    characteristicProperties: CharacteristicProperty.WriteWithoutResponse,\n  });\n  return characteristic;\n}\n\nexport async function readRSSIAsync(peripheralUUID: UUID): Promise<number> {\n  invariantAvailability('readRSSIAsync');\n  invariantUUID(peripheralUUID);\n  return await ExpoBluetooth.readRSSIAsync(peripheralUUID);\n}\n\nexport async function getPeripheralsAsync(): Promise<any[]> {\n  invariantAvailability('getPeripheralsAsync');\n  return await ExpoBluetooth.getPeripheralsAsync();\n}\n\nexport async function getCentralAsync(): Promise<any> {\n  invariantAvailability('getCentralAsync');\n  return await ExpoBluetooth.getCentralAsync();\n}\n\nexport async function isScanningAsync(): Promise<any> {\n  const { isScanning } = await getCentralAsync();\n  return isScanning;\n}\n\n// TODO: Bacon: Add serviceUUIDs\nexport async function discoverServicesForPeripheralAsync(options: {\n  id: string;\n  serviceUUIDs?: UUID[];\n  characteristicProperties?: CharacteristicProperty;\n}): Promise<{ peripheral: NativePeripheral }> {\n  invariantAvailability('discoverServicesForPeripheralAsync');\n  const transaction = Transaction.fromTransactionId(options.id);\n  return await ExpoBluetooth.discoverServicesForPeripheralAsync({\n    ...transaction.getUUIDs(),\n    serviceUUIDs: options.serviceUUIDs,\n    characteristicProperties: options.characteristicProperties,\n  });\n}\n\nexport async function discoverIncludedServicesForServiceAsync(options: {\n  id: string;\n  serviceUUIDs?: UUID[];\n}): Promise<{ peripheral: NativePeripheral }> {\n  invariantAvailability('discoverIncludedServicesForServiceAsync');\n  const transaction = Transaction.fromTransactionId(options.id);\n  return await ExpoBluetooth.discoverIncludedServicesForServiceAsync({\n    ...transaction.getUUIDs(),\n    serviceUUIDs: options.serviceUUIDs,\n  });\n}\n\nexport async function discoverCharacteristicsForServiceAsync(options: {\n  id: string;\n  serviceUUIDs?: UUID[];\n  characteristicProperties?: CharacteristicProperty;\n}): Promise<{ service: NativeService }> {\n  invariantAvailability('discoverCharacteristicsForServiceAsync');\n  const transaction = Transaction.fromTransactionId(options.id);\n  return await ExpoBluetooth.discoverCharacteristicsForServiceAsync({\n    ...transaction.getUUIDs(),\n    serviceUUIDs: options.serviceUUIDs,\n    characteristicProperties: options.characteristicProperties,\n  });\n}\n\nexport async function discoverDescriptorsForCharacteristicAsync(options: {\n  id: string;\n  serviceUUIDs?: UUID[];\n  characteristicProperties?: CharacteristicProperty;\n}): Promise<{ peripheral: NativePeripheral; characteristic: NativeCharacteristic }> {\n  invariantAvailability('discoverDescriptorsForCharacteristicAsync');\n  const transaction = Transaction.fromTransactionId(options.id);\n  return await ExpoBluetooth.discoverDescriptorsForCharacteristicAsync({\n    ...transaction.getUUIDs(),\n    serviceUUIDs: options.serviceUUIDs,\n    characteristicProperties: options.characteristicProperties,\n  });\n  // return await discoverAsync({ id });\n}\n\nexport async function loadPeripheralAsync(\n  { id },\n  skipConnecting: boolean = false\n): Promise<NativePeripheral> {\n  const peripheralId = peripheralIdFromId(id);\n  const peripheral = getPeripherals()[peripheralId];\n  if (!peripheral) {\n    throw new Error('Not a peripheral ' + peripheralId);\n  }\n\n  if (peripheral.state !== 'connected') {\n    if (!skipConnecting) {\n      const connectedPeripheral = await connectAsync(peripheralId, {\n        onDisconnect: (...props) => {\n          console.log('On Disconnect public callback', ...props);\n        },\n      });\n      console.log('loadPeripheralAsync(): connected!');\n      return loadPeripheralAsync(connectedPeripheral, true);\n    } else {\n      // This should never be called because in theory connectAsync would throw an error.\n    }\n  } else if (peripheral.state === 'connected') {\n    console.log('loadPeripheralAsync(): _loadChildrenRecursivelyAsync!');\n    await _loadChildrenRecursivelyAsync({ id: peripheralId });\n  }\n\n  // In case any updates occured during this function.\n  return getPeripherals()[peripheralId];\n}\n\nexport async function _loadChildrenRecursivelyAsync({ id }): Promise<any[]> {\n  const components = id.split(DELIMINATOR);\n  console.log({ components });\n  if (components.length === 4) {\n    // Descriptor ID\n    throw new Error('Descriptors have no children');\n  } else if (components.length === 3) {\n    // Characteristic ID\n    console.log('Load Characteristic ', id);\n    // DEBUG\n\n    // console.warn('DISABLE ME');\n    // return [];\n    const {\n      characteristic: { descriptors },\n    } = await discoverDescriptorsForCharacteristicAsync({ id });\n    return descriptors;\n  } else if (components.length === 2) {\n    // Service ID\n    console.log('Load Service ', id);\n    const { service } = await discoverCharacteristicsForServiceAsync({ id });\n    console.log('LOADED CHARACTERISTICS FROM SERVICE', service);\n    return await Promise.all(\n      service.characteristics.map(characteristic => _loadChildrenRecursivelyAsync(characteristic))\n    );\n  } else if (components.length === 1) {\n    // Peripheral ID\n    console.log('Load Peripheral ', id);\n    const {\n      peripheral: { services },\n    } = await discoverServicesForPeripheralAsync({ id });\n    return await Promise.all(services.map(service => _loadChildrenRecursivelyAsync(service)));\n  } else {\n    throw new Error(`Unknown ID ${id}`);\n  }\n}\n\nexport async function getConnectedPeripheralsAsync(\n  serviceUUIDsToQuery: UUID[] = []\n): Promise<NativePeripheral[]> {\n  invariantAvailability('getConnectedPeripheralsAsync');\n  return await ExpoBluetooth.getConnectedPeripheralsAsync(serviceUUIDsToQuery);\n}\n\nconst android = {\n  async requestMTUAsync(peripheralUUID: UUID, MTU: number): Promise<number> {\n    invariantAvailability('requestMTUAsync');\n    invariantUUID(peripheralUUID);\n    return await ExpoBluetooth.requestMTUAsync(peripheralUUID, MTU);\n  },\n  async createBondAsync(peripheralUUID: UUID): Promise<any> {\n    invariantAvailability('createBondAsync');\n    invariantUUID(peripheralUUID);\n    return await ExpoBluetooth.createBondAsync(peripheralUUID);\n  },\n  async removeBondAsync(peripheralUUID: UUID): Promise<any> {\n    invariantAvailability('removeBondAsync');\n    invariantUUID(peripheralUUID);\n    return await ExpoBluetooth.removeBondAsync(peripheralUUID);\n  },\n  async enableBluetoothAsync(isBluetoothEnabled: boolean): Promise<void> {\n    invariantAvailability('enableBluetoothAsync');\n    return await ExpoBluetooth.enableBluetoothAsync(isBluetoothEnabled);\n  },\n  async getBondedPeripheralsAsync(): Promise<NativePeripheral[]> {\n    invariantAvailability('getBondedPeripheralsAsync');\n    return await ExpoBluetooth.getBondedPeripheralsAsync();\n  },\n  async requestConnectionPriorityAsync(\n    peripheralUUID: UUID,\n    connectionPriority: number\n  ): Promise<any> {\n    invariantAvailability('requestConnectionPriorityAsync');\n    invariantUUID(peripheralUUID);\n    return await ExpoBluetooth.requestConnectionPriorityAsync(peripheralUUID, connectionPriority);\n  },\n  async clearCacheForPeripheralAsync(peripheralUUID: UUID): Promise<boolean> {\n    invariantAvailability('clearCacheForPeripheralAsync');\n    invariantUUID(peripheralUUID);\n    return await ExpoBluetooth.clearCacheForPeripheralAsync(peripheralUUID);\n  },\n  observeBluetoothAvailabilty(callback: (updates: Central) => void): Subscription {\n    return addHandlerForKey(EVENTS.ENABLE_BLUETOOTH, callback);\n  },\n};\n\nexport { android };\n\nexport async function _reset(): Promise<void> {\n  await stopScanAsync();\n  clearPeripherals();\n  await _resetAllHandlers();\n}\n\naddListener(({ data, event }: { data: NativeEventData; event: string }) => {\n  const { transactionId, peripheral, peripherals, central, advertisementData, RSSI, error } = data;\n\n  // console.log('GOT EVENT: ', { data, event });\n  if (event === 'UPDATE') {\n    clearPeripherals();\n    if (peripherals) {\n      for (const peripheral of peripherals) {\n        updateStateWithPeripheral(peripheral);\n      }\n    }\n    firePeripheralObservers();\n    return;\n  }\n\n  switch (event) {\n    case EVENTS.CENTRAL_DID_DISCONNECT_PERIPHERAL:\n    case EVENTS.CENTRAL_DID_DISCOVER_PERIPHERAL:\n      fireMultiEventHandlers(event, { peripheral });\n      firePeripheralObservers();\n      return;\n    case EVENTS.CENTRAL_DID_UPDATE_STATE:\n      if (!central) {\n        throw new Error('EXBluetooth: Central not defined while processing: ' + event);\n      }\n\n      for (const callback of getHandlersForKey(event)) {\n        callback(central.state);\n      }\n\n      return;\n    case EVENTS.CENTRAL_DID_RETRIEVE_CONNECTED_PERIPHERALS:\n    case EVENTS.CENTRAL_DID_RETRIEVE_PERIPHERALS:\n      return;\n    case EVENTS.ENABLE_BLUETOOTH:\n      fireMultiEventHandlers(event, { central });\n      return;\n    default:\n      throw new Error('EXBluetooth: Unhandled event: ' + event);\n  }\n});\n"]}
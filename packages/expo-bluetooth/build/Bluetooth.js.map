{"version":3,"file":"Bluetooth.js","sourceRoot":"","sources":["../src/Bluetooth.ts"],"names":[],"mappings":"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","sourcesContent":["import { Platform, Subscription } from 'expo-core';\n\nimport {\n  Base64,\n  Central,\n  CentralState,\n  CharacteristicProperty,\n  Identifier,\n  NativeAdvertismentData,\n  NativeBluetoothElement,\n  NativeCharacteristic,\n  NativeDescriptor,\n  NativeError,\n  NativeEventData,\n  NativePeripheral,\n  NativeService,\n  PeripheralFoundCallback,\n  PeripheralState,\n  ScanSettings,\n  StateUpdatedCallback,\n  TransactionId,\n  TransactionType,\n  UUID,\n  WriteCharacteristicOptions,\n} from './Bluetooth.types';\nimport { BLUETOOTH_EVENT, DELIMINATOR, EVENTS, TYPES } from './BluetoothConstants';\nimport BluetoothError from './BluetoothError';\nimport {\n  addHandlerForKey,\n  addListener,\n  fireMultiEventHandlers,\n  firePeripheralObservers,\n  getHandlersForKey,\n  resetHandlersForKey,\n} from './BluetoothEventHandler';\nimport { invariantAvailability, invariantUUID } from './BluetoothInvariant';\nimport {\n  clearPeripherals,\n  getPeripherals,\n  updateAdvertismentDataStore,\n  updateStateWithPeripheral,\n} from './BluetoothLocalState';\nimport {\n  addCallbackForTransactionId,\n  addTransactionForId,\n  deleteTransactionForId,\n  getTransactionForId,\n  getTransactions,\n  peripheralIdFromId,\n  removeCallbackForTransactionId,\n} from './BluetoothTransactions';\nimport ExpoBluetooth from './ExpoBluetooth';\nimport Transaction from './Transaction';\n\nexport {\n  CentralState,\n  PeripheralState,\n  Base64,\n  UUID,\n  Identifier,\n  TransactionId,\n  NativeBluetoothElement,\n  NativeDescriptor,\n  NativeEventData,\n  NativeError,\n  NativeCharacteristic,\n  NativeService,\n  NativeAdvertismentData,\n  NativePeripheral,\n  TransactionType,\n  PeripheralFoundCallback,\n  StateUpdatedCallback,\n  ScanSettings,\n  Central,\n  CharacteristicProperty,\n};\n\nexport { BLUETOOTH_EVENT, TYPES, EVENTS }\n\nexport async function startScanAsync(scanSettings: ScanSettings = {}): Promise<Subscription> {\n  invariantAvailability('startScanAsync');\n  const { serviceUUIDsToQuery = [], scanningOptions = {}, callback = function() {} } = scanSettings;\n  /* Prevents the need for CBCentralManagerScanOptionAllowDuplicatesKey in the info.plist */\n  const serviceUUIDsWithoutDuplicates = [...new Set(serviceUUIDsToQuery)];\n  /* iOS:\n   *\n   * Although strongly discouraged,\n   * if <i>serviceUUIDs</i> is <i>nil</i> all discovered peripherals will be returned.\n   * If the central is already scanning with different\n   * <i>serviceUUIDs</i> or <i>options</i>, the provided parameters will replace them.\n   */\n  \n  await ExpoBluetooth.startScanAsync(serviceUUIDsWithoutDuplicates, scanningOptions);\n  return addHandlerForKey(EVENTS.CENTRAL_DID_DISCOVER_PERIPHERAL, callback)\n}\n\nexport async function stopScanAsync(): Promise<void> {\n  invariantAvailability('stopScanAsync');\n  // Remove all callbacks\n  resetHandlersForKey(EVENTS.CENTRAL_DID_DISCOVER_PERIPHERAL);\n  await ExpoBluetooth.stopScanAsync();\n}\n\n// Avoiding using \"start\" in passive method names\nexport async function observeUpdatesAsync(callback: (updates: any) => void): Promise<Subscription> {\n  return addHandlerForKey('everything', callback);\n}\n\nexport async function observeStateAsync(callback: StateUpdatedCallback): Promise<Subscription> {\n  const central = await getCentralAsync();\n  callback(central.state);\n  return addHandlerForKey(EVENTS.CENTRAL_DID_UPDATE_STATE, callback);\n}\n\nexport async function connectAsync(options: {\n  uuid: string;\n  timeout?: number;\n  options?: any;\n}): Promise<NativePeripheral> {\n  invariantAvailability('connectAsync');\n  invariantUUID(options.uuid)\n  const peripheralUUID = options.uuid;\n  return new Promise((resolve, reject) => {\n\n    const transaction = new Transaction({ peripheralUUID }, TransactionType.connect);\n    const transactionId = transaction.generateId();\n\n    let timeoutTag: number | undefined;\n    if (options.timeout) {\n      timeoutTag = setTimeout(() => {\n        disconnectAsync({ uuid: peripheralUUID });\n        deleteTransactionForId(transactionId);\n        reject('request timeout');\n      }, options.timeout);\n    }\n\n    addTransactionForId(transactionId, {\n      resolve(...props) {\n        clearTimeout(timeoutTag);\n        return resolve(...props);\n      },\n      reject(...props) {\n        clearTimeout(timeoutTag);\n        return reject(...props);\n      },\n    });\n\n    ExpoBluetooth.connectAsync(options);\n  });\n}\n\nexport async function disconnectAsync(options: { uuid: string }): Promise<any> {\n  invariantAvailability('disconnectAsync');\n  invariantUUID(options.uuid);\n  const peripheralUUID = options.uuid;\n  return new Promise((resolve, reject) => {\n    const transactionId = Transaction.generateTransactionId({ peripheralUUID }, TransactionType.disconnect);\n    addTransactionForId(transactionId, { resolve, reject });\n    ExpoBluetooth.disconnectAsync(options);\n  });\n}\n\n/* TODO: Bacon: Add a return type */\nexport async function readDescriptorAsync({ peripheralUUID, serviceUUID, characteristicUUID, descriptorUUID }: any): Promise<Base64 | undefined> {\n  const output = await updateDescriptorAsync({ peripheralUUID, serviceUUID, characteristicUUID, descriptorUUID }, CharacteristicProperty.Read);\n\n  if (output && output.descriptor) {\n    const descriptor: NativeDescriptor = output.descriptor;\n    return descriptor.value;\n  }\n\n  throw new Error(`Not able to read descriptor: ${JSON.stringify({ peripheralUUID, serviceUUID, characteristicUUID, descriptorUUID })}`)\n}\n\n/* TODO: Bacon: Add a return type */\nexport async function writeDescriptorAsync({ peripheralUUID, serviceUUID, characteristicUUID, descriptorUUID, data }: any): Promise<any> {\n  return await updateDescriptorAsync({ peripheralUUID, serviceUUID, characteristicUUID, descriptorUUID, data }, CharacteristicProperty.Write);\n}\n\n/* TODO: Bacon: Add a return type */\nexport async function readCharacteristicAsync({ peripheralUUID, serviceUUID, characteristicUUID }: any): Promise<Base64 | null> {\n  const output = await updateCharacteristicAsync({ peripheralUUID, serviceUUID, characteristicUUID }, CharacteristicProperty.Read);\n  if (output && output.characteristic) {\n    const characteristic: NativeCharacteristic = output.characteristic;\n    return characteristic.value;\n  }\n\n  throw new Error(`Not able to read characteristic: ${JSON.stringify({ peripheralUUID, serviceUUID, characteristicUUID })}`)\n}\n\n/* TODO: Bacon: Add a return type */\nexport async function writeCharacteristicAsync({ peripheralUUID, serviceUUID, characteristicUUID, data }: any): Promise<any> {\n  return await updateCharacteristicAsync({ peripheralUUID, serviceUUID, characteristicUUID, data }, CharacteristicProperty.Write);\n}\n\n/* TODO: Bacon: Why would anyone use this? */\n/* TODO: Bacon: Test if this works */\n/* TODO: Bacon: Add a return type */\nexport async function writeCharacteristicWithoutResponseAsync({ peripheralUUID, serviceUUID, characteristicUUID, data }: WriteCharacteristicOptions): Promise<any> {\n  return await updateCharacteristicAsync({ peripheralUUID, serviceUUID, characteristicUUID, data }, CharacteristicProperty.WriteWithoutResponse);\n}\n\nexport async function readRSSIAsync(peripheralUUID: UUID): Promise<any> {\n  invariantAvailability('readRSSIAsync');\n  invariantUUID(peripheralUUID);\n\n  return new Promise((resolve, reject) => {\n    const transactionId = Transaction.generateTransactionId({ peripheralUUID }, TransactionType.rssi);\n    addTransactionForId(transactionId, { resolve, reject });\n    ExpoBluetooth.readRSSIAsync({ uuid: peripheralUUID });\n  });\n}\n\nexport async function getPeripheralsAsync(): Promise<any[]> {\n  invariantAvailability('getPeripheralsAsync');\n  // TODO: Bacon: Do we need to piggy back and get the delegate results? Or is the cached version accurate enough to return?\n  return await ExpoBluetooth.getPeripheralsAsync({});\n  // return new Promise((resolve, reject) => {\n  //   getPeripheralsAsyncCallbacks.push({ resolve, reject });\n  //   ExpoBluetooth.getPeripheralsAsync(options);\n  // })\n}\n\nexport async function getCentralAsync(): Promise<any> {\n  invariantAvailability('getCentralAsync');\n  return await ExpoBluetooth.getCentralAsync();\n}\n\nexport async function isScanningAsync(): Promise<any> {\n  const { isScanning } = await getCentralAsync();\n  return isScanning;\n}\n\n// TODO: Bacon: Add serviceUUIDs\nexport async function discoverServicesForPeripheralAsync(options: {\n  id: string;\n  serviceUUIDsToQuery?: UUID[];\n}): Promise<{ peripheral: NativePeripheral }> {\n  return await discoverAsync(options);\n}\n\nexport async function discoverCharacteristicsForServiceAsync({\n  id,\n}): Promise<{ service: NativeService }> {\n  return await discoverAsync({ id });\n}\n\nexport async function discoverDescriptorsForCharacteristicAsync({\n  id,\n}): Promise<{ peripheral: NativePeripheral; characteristic: NativeCharacteristic }> {\n  return await discoverAsync({ id });\n}\n\nexport async function loadPeripheralAsync(\n  { id },\n  skipConnecting: boolean = false\n): Promise<NativePeripheral> {\n  const peripheralId = peripheralIdFromId(id);\n  const peripheral = getPeripherals()[peripheralId];\n  if (!peripheral) {\n    throw new Error('Not a peripheral ' + peripheralId);\n  }\n\n  if (peripheral.state !== 'connected') {\n    if (!skipConnecting) {\n      await connectAsync({ uuid: peripheralId });\n      return loadPeripheralAsync({ id }, true);\n    } else {\n      // This should never be called because in theory connectAsync would throw an error.\n    }\n  } else if (peripheral.state === 'connected') {\n    await loadChildrenRecursivelyAsync({ id: peripheralId });\n  }\n\n  // In case any updates occured during this function.\n  return getPeripherals()[peripheralId];\n}\n\nexport async function loadChildrenRecursivelyAsync({ id }): Promise<any[]> {\n  const components = id.split(DELIMINATOR);\n  console.log({components});\n  if (components.length === 4) {\n    // Descriptor ID\n    throw new Error('Descriptors have no children');\n  } else if (components.length === 3) {\n    // Characteristic ID\n    console.log('Load Characteristic ', id);\n    const {\n      characteristic: { descriptors },\n    } = await discoverDescriptorsForCharacteristicAsync({ id });\n    return descriptors;\n  } else if (components.length === 2) {\n    // Service ID\n    console.log('Load Service ', id);\n    const {\n      service,\n    } = await discoverCharacteristicsForServiceAsync({ id });\n    console.log(\"LOADED CHARACTERISTICS FROM SERVICE\", service);\n    return await Promise.all(\n      service.characteristics.map(characteristic => loadChildrenRecursivelyAsync(characteristic))\n    );\n  } else if (components.length === 1) {\n    // Peripheral ID\n    console.log('Load Peripheral ', id);\n    const {\n      peripheral: { services },\n    } = await discoverServicesForPeripheralAsync({ id });\n    return await Promise.all(services.map(service => loadChildrenRecursivelyAsync(service)));\n  } else {\n    throw new Error(`Unknown ID ${id}`);\n  }\n}\n\naddListener(({ data, event }: { data: NativeEventData; event: string }) => {\n  const { transactionId, peripheral, peripherals, central, advertisementData, rssi, error } = data;\n\n  console.log(\"GOT EVENT: \", {data: data, event});\n  if (central) {\n    // _central = central;\n  }\n\n  if (peripheral) {\n    if (advertisementData) {\n      updateAdvertismentDataStore(peripheral.id, advertisementData);\n      peripheral.advertisementData = advertisementData;\n    }\n    if (rssi) {\n      peripheral.rssi = rssi;\n    }\n    updateStateWithPeripheral(peripheral);\n  }\n\n  if (peripherals) {\n    for (const peripheral of peripherals) {\n      updateStateWithPeripheral(peripheral);\n    }\n  }\n\n  if (transactionId) {\n    if (error == null) {\n      // TODO: Bacon: Handle the case where a peripheral disconnects from the central randomly.\n      firePeripheralObservers();\n    }\n    if (transactionId in getTransactions()) {\n      \n      const { resolve, reject, callbacks } = getTransactionForId(transactionId);\n\n      console.log('Handle: ', { transactionId, transactions: Object.keys(getTransactions()), event, data: Object.keys(data) });\n\n      if (callbacks) {\n        for (let callback of callbacks) {\n          if (callback instanceof Function) {\n            // TODO: Bacon: should we pass back an error? Will one ever exist?\n            callback(data);\n          } else {\n            const { resolve, reject } = callback;\n            if (error) {\n              reject(new BluetoothError(error));\n            } else {\n              const { error, ...outputData } = data;\n              resolve(outputData);\n            }\n            removeCallbackForTransactionId(callback, transactionId);\n          }\n        }\n        return;\n      } else if (resolve && reject) {        \n        if (error) {\n          reject(new BluetoothError(error));\n        } else {\n          const { error, ...outputData } = data;\n          resolve(outputData);\n        }\n        deleteTransactionForId(transactionId);\n        return;\n      } else {\n        console.log('Throwing Error because no callback is found for transactionId: ', {\n          data,\n          transactions: getTransactions()\n        });\n        throw new Error('Unknown error');\n      }\n    } else {\n      console.log('Unhandled transactionId', { transactionId, transactions: Object.keys(getTransactions()), event, data: Object.keys(data) });\n      // throw new Error('Unhandled transactionId');\n    }\n  } else {\n    switch (event) {\n      case EVENTS.CENTRAL_DID_DISCOVER_PERIPHERAL:\n        fireMultiEventHandlers(event, { central, peripheral });\n        firePeripheralObservers();\n\n        return;\n      case EVENTS.CENTRAL_DID_UPDATE_STATE:\n        if (!central) {\n          throw new Error('EXBluetooth: Central not defined while processing: ' + event);\n        }\n        // Currently this is iOS only\n        if (Platform.OS === 'ios') {\n          const peripheralsAreStillValid =\n            central.state == CentralState.PoweredOff || central.state === CentralState.PoweredOn;\n          if (!peripheralsAreStillValid) {\n            // Clear caches\n            clearPeripherals();\n            firePeripheralObservers();\n          }\n        }\n\n        for (const callback of getHandlersForKey(event)) {\n          callback(central.state);\n        }\n\n        return;\n      case EVENTS.CENTRAL_DID_RETRIEVE_CONNECTED_PERIPHERALS:\n      case EVENTS.CENTRAL_DID_RETRIEVE_PERIPHERALS:\n        return;\n      default:\n        throw new Error('EXBluetooth: Unhandled event: ' + event);\n    }\n  }\n});\n\n// Interactions\n\nasync function discoverAsync(options: { id: string; serviceUUIDsToQuery?: UUID[] }): Promise<any> {\n  invariantAvailability('discoverAsync');\n  const { serviceUUIDsToQuery, id } = options;\n\n  const transaction = Transaction.fromTransactionId(id);\n  transaction.setType(TransactionType.scan);\n\n  return new Promise((resolve, reject) => {  \n    addCallbackForTransactionId({ resolve, reject }, transaction.generateId());\n    ExpoBluetooth.discoverAsync({\n      ...transaction.getUUIDs(),\n      serviceUUIDsToQuery,\n    });\n  });\n}\n\n\n// export async function setCharacteristicShouldNotifyAsync({ isEnabled, peripheralUUID, serviceUUID, characteristicUUID, data }: any): Promise<any> {\n//   return await updateCharacteristicAsync({ isEnabled, peripheralUUID, serviceUUID, characteristicUUID, data }, CharacteristicProperty.Notify);\n// }\n\n// export async function setCharacteristicShouldIndicateAsync({ isEnabled, peripheralUUID, serviceUUID, characteristicUUID, data }: any): Promise<any> {\n//   return await updateCharacteristicAsync({ isEnabled, peripheralUUID, serviceUUID, characteristicUUID, data }, CharacteristicProperty.Indicate);\n// }\n\nasync function updateCharacteristicAsync(options: any, characteristicProperties: CharacteristicProperty): Promise<any> {\n  invariantAvailability('updateCharacteristicAsync');\n\n  invariantUUID(options.peripheralUUID);\n  invariantUUID(options.serviceUUID);\n  invariantUUID(options.characteristicUUID);\n  return new Promise((resolve, reject) => {\n    const expectResponse = characteristicPropertyUpdateExpectsResponse(characteristicProperties);\n    if (expectResponse) {\n      const transactionId = Transaction.generateTransactionId(options, characteristicProperties);\n      addTransactionForId(transactionId, { resolve, reject });\n    } else {\n      resolve();\n    }\n    ExpoBluetooth.updateCharacteristicAsync({ ...options, characteristicProperties });\n  });\n}\n\nfunction characteristicPropertyUpdateExpectsResponse(characteristicProperty: CharacteristicProperty): boolean {\n  if (characteristicProperty === CharacteristicProperty.WriteWithoutResponse) {\n    return false;\n  }\n  return true;\n}\n\nasync function updateDescriptorAsync(options: any, characteristicProperties: CharacteristicProperty.Read | CharacteristicProperty.Write): Promise<any> {\n  invariantAvailability('updateDescriptorAsync');\n\n  invariantUUID(options.peripheralUUID);\n  invariantUUID(options.serviceUUID);\n  invariantUUID(options.characteristicUUID);\n  invariantUUID(options.descriptorUUID);\n  return new Promise((resolve, reject) => {\n    const transactionId = Transaction.generateTransactionId(options, characteristicProperties);\n    addTransactionForId(transactionId, { resolve, reject });\n    ExpoBluetooth.updateDescriptorAsync({...options, characteristicProperties});\n  });\n}\n"]}
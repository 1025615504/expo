{"version":3,"file":"Bluetooth.js","sourceRoot":"","sources":["../src/Bluetooth.ts"],"names":[],"mappings":"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","sourcesContent":["import { EventEmitter, Subscription } from 'expo-core';\nimport { UnavailabilityError } from 'expo-errors';\n\nimport {\n  Central,\n  PeripheralInterface,\n  ServiceInterface,\n  NativeEventData,\n  TransactionId,\n  CharacteristicInterface,\n  ErrorInterface,\n  ScanSettings,\n  StateUpdatedCallback,\n  TransactionType,\n  UUID,\n  WriteOptions,\n  AdvertismentDataInterface,\n  DescriptorInterface,\n} from './Bluetooth.types';\nimport ExpoBluetooth from './ExpoBluetooth';\n\nlet transactions: { [transactionId: string]: any } = {};\n\nconst eventEmitter = new EventEmitter(ExpoBluetooth);\n\nfunction _validateUUID(uuid: string | undefined): string {\n  if (uuid === undefined || (typeof uuid !== 'string' && uuid === '')) {\n    throw new Error('Bluetooth: Invalid UUID provided!');\n  }\n  return uuid;\n}\n\nexport const { Events } = ExpoBluetooth;\n\n// Manage all of the bluetooth information.\nlet _peripherals: { [peripheralId: string]: PeripheralInterface } = {};\n\nlet _advertisments: any = {};\nlet _central: Central | null = null;\n\nconst multiEventHandlers: any = {\n  [Events.CENTRAL_DID_DISCOVER_PERIPHERAL_EVENT]: [],\n  [Events.CENTRAL_DID_UPDATE_STATE_EVENT]: [],\n  everything: [],\n  centralState: [],\n};\n\nexport async function startScanAsync(scanSettings: ScanSettings = {}): Promise<Subscription> {\n  if (!ExpoBluetooth.startScanAsync) {\n    throw new UnavailabilityError('Bluetooth', 'startScanAsync');\n  }\n\n  const { serviceUUIDsToQuery = [], scanningOptions, callback } = scanSettings;\n  /* Prevents the need for CBCentralManagerScanOptionAllowDuplicatesKey in the info.plist */\n  const serviceUUIDsWithoutDuplicates = [...new Set(serviceUUIDsToQuery)];\n  /* iOS:\n   *\n   * Although strongly discouraged,\n   * if <i>serviceUUIDs</i> is <i>nil</i> all discovered peripherals will be returned.\n   * If the central is already scanning with different\n   * <i>serviceUUIDs</i> or <i>options</i>, the provided parameters will replace them.\n   */\n  await ExpoBluetooth.startScanAsync(serviceUUIDsWithoutDuplicates, scanningOptions);\n\n  if (callback instanceof Function) {\n    multiEventHandlers[Events.CENTRAL_DID_DISCOVER_PERIPHERAL_EVENT].push(callback);\n  }\n\n  return {\n    remove() {\n      const index = multiEventHandlers[Events.CENTRAL_DID_DISCOVER_PERIPHERAL_EVENT].indexOf(\n        callback\n      );\n      if (index != -1) {\n        multiEventHandlers[Events.CENTRAL_DID_DISCOVER_PERIPHERAL_EVENT].splice(index, 1);\n      }\n    },\n  };\n}\n\nexport async function stopScanAsync(): Promise<void> {\n  if (!ExpoBluetooth.stopScanAsync) {\n    throw new UnavailabilityError('Bluetooth', 'stopScanAsync');\n  }\n\n  // Remove all callbacks\n  multiEventHandlers[Events.CENTRAL_DID_DISCOVER_PERIPHERAL_EVENT] = [];\n\n  await ExpoBluetooth.stopScanAsync();\n}\n\n// Avoiding using \"start\" in passive method names\nexport async function observeUpdatesAsync(callback: (updates: any) => void): Promise<Subscription> {\n  multiEventHandlers.everything.push(callback);\n\n  return {\n    remove() {\n      const index = multiEventHandlers.everything.indexOf(callback);\n      if (index != -1) {\n        multiEventHandlers.everything.splice(index, 1);\n      }\n    },\n  };\n}\n\nexport async function observeStateAsync(callback: StateUpdatedCallback): Promise<Subscription> {\n  // TODO: Bacon: Is this just automatic?\n  multiEventHandlers[Events.CENTRAL_DID_UPDATE_STATE_EVENT].push(callback);\n\n  return {\n    remove() {\n      const index = multiEventHandlers[Events.CENTRAL_DID_UPDATE_STATE_EVENT].indexOf(callback);\n      if (index != -1) {\n        multiEventHandlers[Events.CENTRAL_DID_UPDATE_STATE_EVENT].splice(index, 1);\n      }\n    },\n  };\n}\n\nexport async function connectAsync(options: {\n  uuid: string;\n  options?: any;\n}): Promise<PeripheralInterface> {\n  if (!ExpoBluetooth.connectAsync) {\n    throw new UnavailabilityError('Bluetooth', 'connectAsync');\n  }\n  const peripheralUUID = _validateUUID(options.uuid);\n  return new Promise((resolve, reject) => {\n    const transactionId = createTransactionId({ peripheralUUID }, TransactionType.connect);\n    transactions[transactionId] = { resolve, reject };\n    ExpoBluetooth.connectAsync(options);\n  });\n}\n\nexport async function disconnectAsync(options: { uuid: string }): Promise<any> {\n  if (!ExpoBluetooth.disconnectAsync) {\n    throw new UnavailabilityError('Bluetooth', 'disconnectAsync');\n  }\n  const peripheralUUID = _validateUUID(options.uuid);\n  return new Promise((resolve, reject) => {\n    const transactionId = createTransactionId({ peripheralUUID }, TransactionType.disconnect);\n    transactions[transactionId] = { resolve, reject };\n    ExpoBluetooth.disconnectAsync(options);\n  });\n}\n\nexport async function readAsync(options: WriteOptions): Promise<any> {\n  return await updateAsync(options, TransactionType.read);\n}\n\nexport async function writeAsync(options: WriteOptions): Promise<any> {\n  return await updateAsync(options, TransactionType.write);\n}\n\nasync function updateAsync(options: WriteOptions, operation: TransactionType): Promise<any> {\n  if (!ExpoBluetooth.updateAsync) {\n    throw new UnavailabilityError('Bluetooth', 'updateAsync');\n  }\n  _validateUUID(options.peripheralUUID);\n  _validateUUID(options.serviceUUID);\n  _validateUUID(options.characteristicUUID);\n  return new Promise((resolve, reject) => {\n    const transactionId = createTransactionId(options, operation);\n    transactions[transactionId] = { resolve, reject };\n    ExpoBluetooth.updateAsync(options);\n  });\n}\n\nexport async function readRSSIAsync(peripheralUUID: UUID): Promise<any> {\n  if (!ExpoBluetooth.readRSSIAsync) {\n    throw new UnavailabilityError('Bluetooth', 'readRSSIAsync');\n  }\n  _validateUUID(peripheralUUID);\n\n  return new Promise((resolve, reject) => {\n    const transactionId = createTransactionId({ peripheralUUID }, TransactionType.read);\n    transactions[transactionId] = { resolve, reject };\n    ExpoBluetooth.readRSSIAsync({ uuid: peripheralUUID });\n  });\n}\n\nexport async function getPeripheralsAsync(): Promise<any[]> {\n  if (!ExpoBluetooth.getPeripheralsAsync) {\n    throw new UnavailabilityError('Bluetooth', 'getPeripheralsAsync');\n  }\n  // TODO: Bacon: Do we need to piggy back and get the delegate results? Or is the cached version accurate enough to return?\n  return await ExpoBluetooth.getPeripheralsAsync({});\n  // return new Promise((resolve, reject) => {\n  //   getPeripheralsAsyncCallbacks.push({ resolve, reject });\n  //   ExpoBluetooth.getPeripheralsAsync(options);\n  // })\n}\n\nexport function getPeripherals(): any {\n  return _peripherals;\n}\n\nexport function getPeripheralForId(id: string): any {\n  const uuid = peripheralIdFromId(id);\n  return _peripherals[uuid];\n}\n\nexport async function getCentralAsync(): Promise<any> {\n  if (!ExpoBluetooth.getCentralAsync) {\n    throw new UnavailabilityError('Bluetooth', 'getCentralAsync');\n  }\n  return await ExpoBluetooth.getCentralAsync();\n}\n\nexport async function isScanningAsync(): Promise<any> {\n  const { isScanning } = await getCentralAsync();\n  return isScanning;\n}\n\n// TODO: Bacon: Add serviceUUIDs\nexport async function discoverServicesForPeripheralAsync(options: {\n  id: string;\n  serviceUUIDsToQuery?: UUID[];\n}): Promise<{ peripheral: PeripheralInterface }> {\n  return await discoverAsync(options);\n}\n\nexport async function discoverCharacteristicsForServiceAsync({\n  id,\n}): Promise<{ service: ServiceInterface }> {\n  return await discoverAsync({ id });\n}\n\nexport async function discoverDescriptorsForCharacteristicAsync({\n  id,\n}): Promise<{ peripheral: PeripheralInterface; characteristic: CharacteristicInterface }> {\n  return await discoverAsync({ id });\n}\n\nexport async function loadPeripheralAsync(\n  { id },\n  skipConnecting: boolean = false\n): Promise<PeripheralInterface> {\n  const peripheralId = peripheralIdFromId(id);\n  const peripheral = getPeripherals()[peripheralId];\n  if (!peripheral) {\n    throw new Error('Not a peripheral ' + peripheralId);\n  }\n\n  if (peripheral.state !== 'connected') {\n    if (!skipConnecting) {\n      await connectAsync({ uuid: peripheralId });\n      return loadPeripheralAsync({ id }, true);\n    } else {\n      // This should never be called because in theory connectAsync would throw an error.\n    }\n  } else if (peripheral.state === 'connected') {\n    await loadChildrenRecursivelyAsync({ id: peripheralId });\n  }\n\n  // In case any updates occured during this function.\n  return getPeripherals()[peripheralId];\n}\n\nexport async function loadChildrenRecursivelyAsync({ id }): Promise<Array<any>> {\n  const components = id.split('|');\n\n  if (components.length === 4) {\n    // Descriptor ID\n    throw new Error('Descriptors have no children');\n  } else if (components.length === 3) {\n    // Characteristic ID\n    console.log('Load Characteristic ', id);\n    const {\n      characteristic: { descriptors },\n    } = await discoverDescriptorsForCharacteristicAsync({ id });\n    return descriptors;\n  } else if (components.length === 2) {\n    // Service ID\n    console.log('Load Service ', id);\n    const {\n      service: { characteristics },\n    } = await discoverCharacteristicsForServiceAsync({ id });\n    return await Promise.all(\n      characteristics.map(characteristic => loadChildrenRecursivelyAsync(characteristic))\n    );\n  } else if (components.length === 1) {\n    // Peripheral ID\n    console.log('Load Peripheral ', id);\n    const {\n      peripheral: { services },\n    } = await discoverServicesForPeripheralAsync({ id });\n    return await Promise.all(services.map(service => loadChildrenRecursivelyAsync(service)));\n  } else {\n    throw new Error(`Unknown ID ${id}`);\n  }\n}\n\naddListener(({ data, event }: { data: NativeEventData; event: string }) => {\n  const { transactionId, peripheral, peripherals, central, advertisementData, rssi, error } = data;\n\n  if (central) {\n    _central = central;\n  }\n\n  if (peripheral) {\n    if (advertisementData) {\n      updateAdvertismentDataStore(peripheral.id, advertisementData);\n      peripheral.advertismentData = advertisementData;\n    }\n    if (rssi) {\n      peripheral.rssi = rssi;\n    }\n    updateStateWithPeripheral(peripheral);\n  }\n\n  if (peripherals) {\n    for (const peripheral of peripherals) {\n      updateStateWithPeripheral(peripheral);\n    }\n  }\n\n  firePeripheralObservers(error);\n\n  if (transactionId) {\n    if (transactionId in transactions) {\n      const { resolve, reject, callbacks } = transactions[transactionId];\n      if (callbacks) {\n        for (let callback of callbacks) {\n          if (callback instanceof Function) {\n            // TODO: Bacon: should we pass back an error? Will one ever exist?\n            callback(data);\n          } else {\n            const { resolve, reject } = callback;\n            if (error) {\n              reject(new Error(error.message));\n            } else {\n              resolve(data);\n            }\n            removeCallbackForTransactionId(callback, transactionId);\n          }\n        }\n      } else if (resolve && reject) {\n        if (error) {\n          reject(new Error(error.message));\n        } else {\n          resolve(data);\n        }\n        delete transactions[transactionId];\n      } else {\n        console.log('Throwing Error because no callback is found for transactionId: ', {\n          data,\n          transactions,\n        });\n        throw new Error('Unknown error');\n      }\n    } else {\n      throw new Error('Unhandled transactionId');\n    }\n  } else {\n    switch (event) {\n      case Events.CENTRAL_DID_DISCOVER_PERIPHERAL_EVENT:\n      case Events.CENTRAL_DID_UPDATE_STATE_EVENT:\n        fireMultiEventHandlers(event, { central, peripheral });\n      case Events.CENTRAL_DID_RETRIEVE_CONNECTED_PERIPHERALS_EVENT:\n      case Events.CENTRAL_DID_RETRIEVE_PERIPHERALS_EVENT:\n        return;\n      default:\n        throw new Error('EXBluetooth: Unhandled event: ' + event);\n    }\n  }\n});\n\n// Interactions\nfunction createTransactionId(\n  options: {\n    peripheralUUID?: string;\n    serviceUUID?: string;\n    characteristicUUID?: string;\n    descriptorUUID?: string;\n  },\n  transactionType: TransactionType\n): string {\n  let targets: string[] = [transactionType];\n\n  if (options.peripheralUUID) targets.push(options.peripheralUUID);\n  if (options.serviceUUID) targets.push(options.serviceUUID);\n  if (options.characteristicUUID) targets.push(options.characteristicUUID);\n  if (options.descriptorUUID) targets.push(options.descriptorUUID);\n  return targets.join('|');\n}\n\nfunction addListener(listener: (event: any) => void): Subscription {\n  const subscription = eventEmitter.addListener(ExpoBluetooth.BLUETOOTH_EVENT, listener);\n  return subscription;\n}\n\n// TODO: Bacon: How do we plan on calling this...\nfunction removeAllListeners(): void {\n  eventEmitter.removeAllListeners(ExpoBluetooth.BLUETOOTH_EVENT);\n}\n\nfunction updateStateWithPeripheral(peripheral: PeripheralInterface) {\n  const {\n    [peripheral.id]: currentPeripheral = {\n      discoveryTimestamp: Date.now(),\n      advertismentData: undefined,\n      rssi: null,\n    },\n    ...others\n  } = _peripherals;\n  _peripherals = {\n    ...others,\n    [peripheral.id]: {\n      discoveryTimestamp: currentPeripheral.discoveryTimestamp,\n      advertismentData: currentPeripheral.advertismentData,\n      rssi: currentPeripheral.rssi,\n      // ...currentPeripheral,\n      ...peripheral,\n    },\n  };\n}\n\nfunction updateAdvertismentDataStore(peripheralId: string, advertismentData: any) {\n  const { [peripheralId]: current = {}, ...others } = _advertisments;\n  _advertisments = {\n    ...others,\n    [peripheralId]: {\n      peripheralId,\n      // ...current,\n      ...advertismentData,\n    },\n  };\n}\n\nfunction firePeripheralObservers(error?: ErrorInterface | null) {\n  for (const subscription of multiEventHandlers.everything) {\n    subscription({ peripherals: getPeripherals(), error });\n  }\n}\n\nfunction fireMultiEventHandlers(\n  event: string,\n  { central, peripheral }: { central?: Central | null; peripheral?: PeripheralInterface | null }\n) {\n  for (const callback of multiEventHandlers[event]) {\n    callback({ central, peripheral });\n  }\n}\n\nfunction peripheralIdFromId(id: string): string {\n  return id.split('|')[0];\n}\n\nasync function discoverAsync(options: { id: string; serviceUUIDsToQuery?: UUID[] }): Promise<any> {\n  if (!ExpoBluetooth.discover) {\n    throw new UnavailabilityError('Bluetooth', 'discover');\n  }\n\n  const { serviceUUIDsToQuery, id } = options;\n\n  const [peripheralUUID, serviceUUID, characteristicUUID] = id.split('|');\n\n  const transactionId = createTransactionId(\n    { peripheralUUID, serviceUUID, characteristicUUID },\n    TransactionType.scan\n  );\n\n  ExpoBluetooth.discover({\n    peripheralUUID,\n    serviceUUID,\n    characteristicUUID,\n    serviceUUIDsToQuery,\n  });\n\n  return new Promise((resolve, reject) => {\n    addCallbackForTransactionId({ resolve, reject }, transactionId);\n  });\n}\n\nfunction ensureCallbacksArrayForTransactionId(transactionId) {\n  if (!(transactionId in transactions) || !Array.isArray(transactions[transactionId].callbacks)) {\n    transactions[transactionId] = { callbacks: [] };\n  }\n}\n\nfunction addCallbackForTransactionId(callback, transactionId) {\n  ensureCallbacksArrayForTransactionId(transactionId);\n  transactions[transactionId].callbacks.push(callback);\n}\n\nfunction removeCallbackForTransactionId(callback, transactionId) {\n  ensureCallbacksArrayForTransactionId(transactionId);\n\n  const index = transactions[transactionId].callbacks.indexOf(callback);\n\n  if (index != -1) {\n    transactions[transactionId].callbacks.splice(index, 1);\n  }\n}\n"]}
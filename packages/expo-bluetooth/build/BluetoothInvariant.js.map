{"version":3,"file":"BluetoothInvariant.js","sourceRoot":"","sources":["../src/BluetoothInvariant.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,mBAAmB,EAAE,MAAM,aAAa,CAAC;AAElD,OAAO,aAAa,MAAM,iBAAiB,CAAC;AAC5C,OAAO,cAAc,MAAM,kBAAkB,CAAC;AAE9C,MAAM,UAAU,aAAa,CAAC,IAAwB;IACpD,IAAI,IAAI,IAAI,IAAI,IAAI,OAAO,IAAI,KAAK,QAAQ,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;QAC5D,MAAM,IAAI,KAAK,CAAC,uCAAuC,CAAC,CAAC;KAC1D;AACH,CAAC;AAED,MAAM,UAAU,qBAAqB,CAAC,UAAkB;IACtD,IAAI,CAAC,CAAC,UAAU,IAAI,aAAa,CAAC,IAAI,CAAC,CAAC,aAAa,CAAC,UAAU,CAAC,YAAY,QAAQ,CAAC,EAAE;QACtF,MAAM,IAAI,mBAAmB,CAAC,gBAAgB,EAAE,UAAU,CAAC,CAAC;KAC7D;AACH,CAAC;AAED,MAAM,UAAU,SAAS,CAAC,MAAW,EAAE,OAAe;IACpD,IAAI,CAAC,MAAM,EAAE;QACX,MAAM,IAAI,cAAc,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,uBAAuB,EAAE,CAAC,CAAC;KACtE;AACH,CAAC","sourcesContent":["import { UnavailabilityError } from 'expo-errors';\n\nimport ExpoBluetooth from './ExpoBluetooth';\nimport BluetoothError from './BluetoothError';\n\nexport function invariantUUID(uuid: string | undefined) {\n  if (uuid == null || typeof uuid !== 'string' || !uuid.length) {\n    throw new Error('expo-bluetooth: Invalid UUID provided');\n  }\n}\n\nexport function invariantAvailability(methodName: string) {\n  if (!(methodName in ExpoBluetooth) || !(ExpoBluetooth[methodName] instanceof Function)) {\n    throw new UnavailabilityError('expo-bluetooth', methodName);\n  }\n}\n\nexport function invariant(should: any, message: string) {\n  if (!should) {\n    throw new BluetoothError({ message, code: 'ERR_BLE_API_INVARIANT' });\n  }\n}\n"]}
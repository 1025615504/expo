{"version":3,"file":"BluetoothTransactions.js","sourceRoot":"","sources":["../src/BluetoothTransactions.ts"],"names":[],"mappings":"AAMA,OAAO,EAAE,WAAW,EAAE,MAAM,sBAAsB,CAAC;AAInD,IAAI,YAAY,GAAoD,EAAE,CAAC;AAEvE,MAAM,UAAU,oCAAoC,CAAC,aAAa;IAChE,IAAI,CAAC,CAAC,aAAa,IAAI,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,YAAY,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC,EAAE;QAC7F,YAAY,CAAC,aAAa,CAAC,GAAG,EAAE,SAAS,EAAE,EAAE,EAAE,CAAC;KACjD;AACH,CAAC;AAED,MAAM,UAAU,2BAA2B,CAAC,QAAQ,EAAE,aAAa;IACjE,oCAAoC,CAAC,aAAa,CAAC,CAAC;IACpD,YAAY,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AACvD,CAAC;AAED,MAAM,UAAU,8BAA8B,CAAC,QAAQ,EAAE,aAAa;IACpE,oCAAoC,CAAC,aAAa,CAAC,CAAC;IAEpD,MAAM,KAAK,GAAG,YAAY,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;IAEtE,IAAI,KAAK,IAAI,CAAC,CAAC,EAAE;QACf,YAAY,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;QAEvD,IAAI,YAAY,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC,MAAM,KAAK,CAAC,EAAE;YACtD,OAAO,YAAY,CAAC,aAAa,CAAC,CAAC;SACpC;KACF;AACH,CAAC;AAED,eAAe;AACf,MAAM,UAAU,mBAAmB,CACjC,OAKC,EACD,eAAyD;IAEzD,IAAI,OAAO,GAAa,CAAC,eAAe,CAAC,CAAC;IAE1C,IAAI,OAAO,CAAC,cAAc,KAAK,SAAS,EAAE;QACxC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;QACrC,IAAI,OAAO,CAAC,WAAW,KAAK,SAAS,EAAE;YACrC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;YAClC,IAAI,OAAO,CAAC,kBAAkB,KAAK,SAAS,EAAE;gBAC5C,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC;gBACzC,IAAI,OAAO,CAAC,cAAc,KAAK,SAAS,EAAE;oBACxC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;iBACtC;aACF;SACF;KACF;IACD,OAAO,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;AACnC,CAAC;AAED,MAAM,UAAU,kBAAkB,CAAC,EAAU;IAC3C,OAAO,EAAE,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;AAClC,CAAC;AAED,MAAM,UAAU,cAAc,CAAC,WAAwB,EAAE,kBAAsC;IAC7F,OAAO,mBAAmB,CAAC,WAAW,CAAC,UAAU,EAAE,EAAE,kBAAkB,CAAC,CAAC;AAC3E,CAAC;AAED,MAAM,UAAU,mBAAmB,CACjC,aAA4B,EAC5B,kBAAsC;IAEtC,YAAY,CAAC,aAAa,CAAC,GAAG,kBAAkB,CAAC;AACnD,CAAC;AAED,MAAM,UAAU,sBAAsB,CAAC,aAA4B;IACjE,IAAI,aAAa,IAAI,YAAY,EAAE;QACjC,OAAO,YAAY,CAAC,aAAa,CAAC,CAAC;KACpC;AACH,CAAC;AAED,MAAM,UAAU,mBAAmB,CAAC,aAA4B;IAC9D,OAAO,YAAY,CAAC,aAAa,CAAC,CAAC;AACrC,CAAC;AAED,MAAM,UAAU,eAAe;IAC7B,OAAO,YAAY,CAAC;AACtB,CAAC","sourcesContent":["import {\n  CharacteristicProperty,\n  TransactionHandler,\n  TransactionId,\n  TransactionType,\n} from './Bluetooth.types';\nimport { DELIMINATOR } from './BluetoothConstants';\n// TODO: this is a cycle\nimport Transaction from './Transaction';\n\nlet transactions: { [transactionId: string]: TransactionHandler } = {};\n\nexport function ensureCallbacksArrayForTransactionId(transactionId) {\n  if (!(transactionId in transactions) || !Array.isArray(transactions[transactionId].callbacks)) {\n    transactions[transactionId] = { callbacks: [] };\n  }\n}\n\nexport function addCallbackForTransactionId(callback, transactionId) {\n  ensureCallbacksArrayForTransactionId(transactionId);\n  transactions[transactionId].callbacks.push(callback);\n}\n\nexport function removeCallbackForTransactionId(callback, transactionId) {\n  ensureCallbacksArrayForTransactionId(transactionId);\n\n  const index = transactions[transactionId].callbacks.indexOf(callback);\n\n  if (index != -1) {\n    transactions[transactionId].callbacks.splice(index, 1);\n\n    if (transactions[transactionId].callbacks.length === 0) {\n      delete transactions[transactionId];\n    }\n  }\n}\n\n// Interactions\nexport function createTransactionId(\n  options: {\n    peripheralUUID?: string;\n    serviceUUID?: string;\n    characteristicUUID?: string;\n    descriptorUUID?: string;\n  },\n  transactionType: TransactionType | CharacteristicProperty\n): string {\n  let targets: string[] = [transactionType];\n\n  if (options.peripheralUUID !== undefined) {\n    targets.push(options.peripheralUUID);\n    if (options.serviceUUID !== undefined) {\n      targets.push(options.serviceUUID);\n      if (options.characteristicUUID !== undefined) {\n        targets.push(options.characteristicUUID);\n        if (options.descriptorUUID !== undefined) {\n          targets.push(options.descriptorUUID);\n        }\n      }\n    }\n  }\n  return targets.join(DELIMINATOR);\n}\n\nexport function peripheralIdFromId(id: string): string {\n  return id.split(DELIMINATOR)[0];\n}\n\nexport function addTransaction(transaction: Transaction, transactionHandler: TransactionHandler) {\n  return addTransactionForId(transaction.generateId(), transactionHandler);\n}\n\nexport function addTransactionForId(\n  transactionId: TransactionId,\n  transactionHandler: TransactionHandler\n) {\n  transactions[transactionId] = transactionHandler;\n}\n\nexport function deleteTransactionForId(transactionId: TransactionId) {\n  if (transactionId in transactions) {\n    delete transactions[transactionId];\n  }\n}\n\nexport function getTransactionForId(transactionId: TransactionId): TransactionHandler | undefined {\n  return transactions[transactionId];\n}\n\nexport function getTransactions(): { [transactionId: string]: TransactionHandler } {\n  return transactions;\n}\n"]}